# https://jacobncalvert.com/blog-archive/2020/03/05/
#   better-jtag-on-the-cheap-with-the-ft232h/
#
# FTDI USB Hi-Speed to MPSSE Breakout from Adafruit
#
# This should work for any bare FT232H
# cf https://metebalci.com/blog/bare-metal-raspberry-pi-3b-jtag/
#
# These BCM283x GPIO pins are for an "Alt 4" pin
# configuration.  "Alt 5" is also possible, but gets in the
# way of normal serial. We enable SRST and assign it an
# FT232H pin even though it is not connected â€” apparently
# necessary to keep OpenOCD happy?
#
# JTAG Signal	BCM283x GPIO	Raspberry Pi 3B Pin	FT232 Pin
# TRST		GPIO22		P15			AC0
# TCK		GPIO25		P22			AD0
# TMS		GPIO27		P13			AD3
# TDI		GPIO26		P37			AD1
# TDO		GPIO24		P18			AD2
# SRST		N/C		N/C			AC1
# RTCK          GPIO23          P16                     N/C
# GND		many		P6,9,14,20,25,30,34,39	GND
 
# Setup driver type
adapter driver ftdi
 
# 30000 kHZ -> 30MHz
adapter speed 30000
 
# Using JTAG (also could be SWD)
transport select jtag
 
# Common PID for FT232H
ftdi vid_pid 0x0403 0x6014
 
# Set sampling to allow higher clock speed
ftdi tdo_sample_edge falling
 
 
# Layout
# On this breakout, the LEDs are on ACBUS8 and ACBUS9, can't assign them
# registers are <ACVALUE><ADVALUE> <ACCONFIG><ADCONFIG>
# so we set 0x0308 to mean only ACBUS nTRST and nSRST, ADBUS3 (TMS) asserted high
# and we set 0x000B to mean only AC3,AC2,AC0 outputs -> (TMS,TD0, TCK)
ftdi layout_init 0x0308 0x000b
 
# Pins
# pin name      | func. |
# --------------|-------|
# ADBUS0        | TCK   |
# ADBUS1        | TDI   |
# ADBUS2        | TDO   |
# ADBUS3        | TMS   |
# ACBUS0        | nTRST |
# ACBUS1        | nSRST |
#---------------|-------|
 
# When data == oe -> pins are switched from output to input to give
# the tri state (L, H, Hi-Z) effect 
ftdi layout_signal nTRST -data 0x0100 -oe 0x0100
ftdi layout_signal nSRST -data 0x0200 -oe 0x0200
